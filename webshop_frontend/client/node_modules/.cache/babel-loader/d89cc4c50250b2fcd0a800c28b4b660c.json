{"ast":null,"code":"const queryString = require('query-string');\n\nexport const handleQueryParams = (query, newQuery) => {\n  var parsed = queryString.parse(query);\n  let queryKeys = Object.keys(parsed);\n  let queryValues = Object.values(parsed);\n  newQuery = newQuery.split('=');\n  let key = newQuery[0];\n  let value = newQuery[1];\n  parsed[key] = value;\n  let txt = '?';\n  txt += queryString.stringify(parsed); // // let startOfQuery = '?';\n  // // if (parsed[key]) {\n  // //     for (let i = 0; i < queryKeys.length; i++) {\n  // //         if (i > 0) {\n  // //             startOfQuery = '&';\n  // //         }\n  // //         key === queryKeys[i] ? txt += `${startOfQuery}${key}=${value}` : txt += `${startOfQuery}${queryKeys[i]}=${queryValues[i]}`\n  // //     }\n  // // } else {\n  // //     for (let i = 0; i < queryKeys.length + 1; i++) {\n  // //         if (i > 0) {\n  // //             startOfQuery = '&';\n  // //         }\n  // //         i === queryKeys.length ? txt += `${startOfQuery}${key}=${value}` : txt += `${startOfQuery}${queryKeys[i]}=${queryValues[i]}`\n  // //     }\n  // }\n\n  return txt;\n};\nexport const removeQueryParam = (query, queryToDel) => {\n  console.log('query');\n};","map":{"version":3,"sources":["A:/Repositories/webshop_react/webshop_frontend/client/src/App/js/functions.js"],"names":["queryString","require","handleQueryParams","query","newQuery","parsed","parse","queryKeys","Object","keys","queryValues","values","split","key","value","txt","stringify","removeQueryParam","queryToDel","console","log"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAClD,MAAIC,MAAM,GAAGL,WAAW,CAACM,KAAZ,CAAkBH,KAAlB,CAAb;AACA,MAAII,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,CAAhB;AACA,MAAIK,WAAW,GAAGF,MAAM,CAACG,MAAP,CAAcN,MAAd,CAAlB;AACAD,EAAAA,QAAQ,GAAGA,QAAQ,CAACQ,KAAT,CAAe,GAAf,CAAX;AACA,MAAIC,GAAG,GAAGT,QAAQ,CAAC,CAAD,CAAlB;AACA,MAAIU,KAAK,GAAGV,QAAQ,CAAC,CAAD,CAApB;AACAC,EAAAA,MAAM,CAACQ,GAAD,CAAN,GAAcC,KAAd;AACA,MAAIC,GAAG,GAAG,GAAV;AACAA,EAAAA,GAAG,IAAIf,WAAW,CAACgB,SAAZ,CAAsBX,MAAtB,CAAP,CATkD,CAUlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAOU,GAAP;AACH,CA3BM;AA6BP,OAAO,MAAME,gBAAgB,GAAG,CAACd,KAAD,EAAQe,UAAR,KAAuB;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,CAFM","sourcesContent":["const queryString = require('query-string');\r\n\r\nexport const handleQueryParams = (query, newQuery) => {\r\n    var parsed = queryString.parse(query);\r\n    let queryKeys = Object.keys(parsed)\r\n    let queryValues = Object.values(parsed)\r\n    newQuery = newQuery.split('=');\r\n    let key = newQuery[0];\r\n    let value = newQuery[1];\r\n    parsed[key] = value\r\n    let txt = '?'\r\n    txt += queryString.stringify(parsed);\r\n    // // let startOfQuery = '?';\r\n    // // if (parsed[key]) {\r\n    // //     for (let i = 0; i < queryKeys.length; i++) {\r\n    // //         if (i > 0) {\r\n    // //             startOfQuery = '&';\r\n    // //         }\r\n    // //         key === queryKeys[i] ? txt += `${startOfQuery}${key}=${value}` : txt += `${startOfQuery}${queryKeys[i]}=${queryValues[i]}`\r\n    // //     }\r\n    // // } else {\r\n    // //     for (let i = 0; i < queryKeys.length + 1; i++) {\r\n    // //         if (i > 0) {\r\n    // //             startOfQuery = '&';\r\n    // //         }\r\n    // //         i === queryKeys.length ? txt += `${startOfQuery}${key}=${value}` : txt += `${startOfQuery}${queryKeys[i]}=${queryValues[i]}`\r\n    // //     }\r\n    // }\r\n    return txt\r\n}\r\n\r\nexport const removeQueryParam = (query, queryToDel) => {\r\n    console.log('query')\r\n}"]},"metadata":{},"sourceType":"module"}