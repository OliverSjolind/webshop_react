{"ast":null,"code":"var _jsxFileName = \"A:\\\\Repositories\\\\webshop_react\\\\webshop_frontend\\\\client\\\\src\\\\App\\\\pages\\\\CartPage.js\";\nimport React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nclass CartPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getProducts = () => {\n      if (localStorage.length) {\n        let localCart = localStorage.getItem('cart');\n        localCart = JSON.parse(localCart);\n        let ids = [];\n\n        for (let i = 0; i < localCart.length; i++) {\n          ids.push(localCart[i].id);\n        }\n\n        let url = `/getProductsById?id=${ids.join('-')}`;\n        fetch(url).then(res => res.json()).then(products => this.setState({\n          products: products\n        }));\n      } else {\n        this.setState({\n          cartEmpty: true\n        });\n      }\n    };\n\n    this.state = {\n      products: null,\n      cartEmpty: false\n    };\n  }\n\n  componentDidMount() {\n    this.getProducts();\n  }\n\n  render() {\n    if (!this.state.cartEmpty) {\n      return React.createElement(\"div\", {\n        className: \"loader-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"preloader-wrapper big active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"spinner-layer spinner-blue-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"circle-clipper left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"gap-patch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"circle-clipper right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })))));\n    }\n\n    if (!this.state.cartEmpty) {\n      const {\n        products\n      } = this.state;\n      let localCart = localStorage.getItem('cart');\n      localCart = JSON.parse(localCart);\n\n      for (let i = 0; i < products.length; i++) {\n        let current = products.map(function (e) {\n          return e.id;\n        }).indexOf(localCart[i].id);\n        products[current].amount = localCart[i].amount;\n      }\n\n      console.log(products);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"row\",\n      id: \"cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, localStorage.length ? React.createElement(\"div\", {\n      id: \"emptyCart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"emptyCartIcon\",\n      class: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"remove_shopping_cart\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Cart is empty\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(TableContainer, {\n      component: Paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: \"cartTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      className: \"tableHead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(TableCell, {\n      className: \"tableHead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Name \"), React.createElement(TableCell, {\n      align: \"center\",\n      className: \"tableHead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Quantity \"), React.createElement(TableCell, {\n      align: \"center\",\n      className: \"tableHead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Price \"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, products.map(product => React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(`../../assets/images/${product.image}`),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(TableCell, {\n      component: \"th\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, product.name), React.createElement(TableCell, {\n      component: \"th\",\n      align: \"center\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, product.amount), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, product.price))))))));\n  }\n\n}\n\nexport default CartPage;","map":{"version":3,"sources":["A:/Repositories/webshop_react/webshop_frontend/client/src/App/pages/CartPage.js"],"names":["React","Component","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CartPage","constructor","props","getProducts","localStorage","length","localCart","getItem","JSON","parse","ids","i","push","id","url","join","fetch","then","res","json","products","setState","cartEmpty","state","componentDidMount","render","current","map","e","indexOf","amount","console","log","product","require","image","name","price"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nclass CartPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: null,\r\n            cartEmpty: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getProducts();\r\n    }\r\n\r\n    getProducts = () => {\r\n        if (localStorage.length) {\r\n            let localCart = localStorage.getItem('cart')\r\n            localCart = JSON.parse(localCart)\r\n            let ids = []\r\n            for (let i = 0; i < localCart.length; i++) {\r\n                ids.push(localCart[i].id)\r\n            }\r\n            let url = `/getProductsById?id=${ids.join('-')}`\r\n            fetch(url)\r\n                .then(res => res.json())\r\n                .then(products => this.setState({ products: products }))\r\n        } else {\r\n            this.setState({ cartEmpty: true })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.cartEmpty) {\r\n            return <div className=\"loader-wrapper\">\r\n                <div className=\"preloader-wrapper big active\">\r\n                    <div className=\"spinner-layer spinner-blue-only\">\r\n                        <div className=\"circle-clipper left\">\r\n                            <div className=\"circle\"></div>\r\n                        </div><div className=\"gap-patch\">\r\n                            <div className=\"circle\"></div>\r\n                        </div><div className=\"circle-clipper right\">\r\n                            <div className=\"circle\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        if (!this.state.cartEmpty) {\r\n            const { products } = this.state\r\n            let localCart = localStorage.getItem('cart')\r\n            localCart = JSON.parse(localCart)\r\n\r\n            for (let i = 0; i < products.length; i++) {\r\n                let current = products.map(function (e) { return e.id; }).indexOf(localCart[i].id)\r\n                products[current].amount = localCart[i].amount\r\n            }\r\n            console.log(products);\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"row\" id=\"cart\">\r\n                {\r\n                    localStorage.length ? (<div id=\"emptyCart\"><div id=\"emptyCartIcon\" class=\"material-icons\">\r\n                        remove_shopping_cart\r\n                            </div>\r\n                        <h3>Cart is empty</h3>\r\n                    </div>\r\n                    )\r\n\r\n                        : (\r\n                            <div>\r\n                                <TableContainer component={Paper}>\r\n                                    <Table className=\"cartTable\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell className=\"tableHead\"></TableCell>\r\n                                                <TableCell className=\"tableHead\">Name </TableCell>\r\n                                                <TableCell align=\"center\" className=\"tableHead\">Quantity </TableCell>\r\n                                                <TableCell align=\"center\" className=\"tableHead\">Price </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {products.map(product => (\r\n                                                <TableRow>\r\n                                                    <TableCell component=\"th\" scope=\"row\"><img src={require(`../../assets/images/${product.image}`)} /></TableCell>\r\n                                                    <TableCell component=\"th\">{product.name}</TableCell>\r\n                                                    <TableCell component=\"th\" align=\"center\" scope=\"row\">{product.amount}</TableCell>\r\n                                                    <TableCell align=\"center\">{product.price}</TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CartPage"]},"metadata":{},"sourceType":"module"}