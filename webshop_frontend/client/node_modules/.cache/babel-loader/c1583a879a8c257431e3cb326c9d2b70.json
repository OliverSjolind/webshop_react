{"ast":null,"code":"var _jsxFileName = \"A:\\\\Repositories\\\\webshop_react\\\\webshop_frontend\\\\client\\\\src\\\\App\\\\components\\\\ProductCards.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass ProductCards extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getProducts = () => {\n      let currentUrl;\n\n      switch (this.props.match.url) {\n        case '/':\n          currentUrl = '/getFrontpageProducts';\n          break;\n\n        default:\n          currentUrl = this.props.location.pathname + this.props.location.search;\n      }\n\n      fetch(currentUrl).then(res => res.json()).then(products => this.setState({\n        products: products\n      }));\n    };\n\n    this.addToCart = id => {\n      let currentCart = localStorage.getItem('cart');\n      currentCart = JSON.parse(currentCart);\n      let duplicatteStatus = false;\n\n      if (currentCart) {\n        for (let i = 0; i < currentCart.length; i++) {\n          if (currentCart[i].id === id) {\n            currentCart[i].amount++;\n            duplicatteStatus = true;\n            break;\n          }\n        }\n\n        if (duplicatteStatus === false) {\n          currentCart.push({\n            id: id,\n            amount: 1\n          });\n        }\n      } else {\n        currentCart = [{\n          id: id,\n          amount: 1\n        }];\n      }\n\n      localStorage.setItem('cart', JSON.stringify(currentCart));\n    };\n\n    this.state = {\n      products: null\n    };\n  } // Fetch the list on first mount\n\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname + this.props.location.search !== prevProps.location.pathname + prevProps.location.search) {\n      this.getProducts();\n    }\n  }\n\n  componentDidMount() {\n    this.getProducts();\n  } // Retrieves the list of items from the Express app\n\n\n  render() {\n    if (!this.state.products) {\n      return React.createElement(\"div\", {\n        className: \"loader-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"preloader-wrapper big active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"spinner-layer spinner-blue-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"circle-clipper left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"gap-patch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"circle-clipper right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })))));\n    }\n\n    const {\n      products\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"row\",\n      id: \"productCards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, products.length ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, products.map(item => {\n      return React.createElement(\"div\", {\n        className: \"col s3 card-container\",\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: `/p/${item.url}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"image\",\n        src: require(`../../assets/images/${item.image}`),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, item.name), React.createElement(\"p\", {\n        className: \"card-desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, item.description))), React.createElement(\"div\", {\n        className: \"card-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"btn grey darken-3 white-text\",\n        onClick: () => this.addToCart(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Add to cart \", React.createElement(\"i\", {\n        class: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"add_shopping_cart\")), React.createElement(\"p\", {\n        className: \"price\",\n        value: item.price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, item.price, \"\\u20AC\"))));\n    })) : React.createElement(\"div\", {\n      className: \"no-product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"No products found\")));\n  }\n\n}\n\nexport default ProductCards;","map":{"version":3,"sources":["A:/Repositories/webshop_react/webshop_frontend/client/src/App/components/ProductCards.js"],"names":["React","Component","Link","ProductCards","constructor","props","getProducts","currentUrl","match","url","location","pathname","search","fetch","then","res","json","products","setState","addToCart","id","currentCart","localStorage","getItem","JSON","parse","duplicatteStatus","i","length","amount","push","setItem","stringify","state","componentDidUpdate","prevProps","componentDidMount","render","map","item","require","image","name","description","price"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ProductCards extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: null\r\n        }\r\n    }\r\n\r\n    // Fetch the list on first mount\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location.pathname + this.props.location.search !== prevProps.location.pathname + prevProps.location.search) {\r\n            this.getProducts();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getProducts();\r\n    }\r\n\r\n    // Retrieves the list of items from the Express app\r\n    getProducts = () => {\r\n        let currentUrl;\r\n        switch (this.props.match.url) {\r\n            case '/': currentUrl = '/getFrontpageProducts'\r\n                break;\r\n            default:\r\n                currentUrl = this.props.location.pathname + this.props.location.search\r\n        }\r\n        fetch(currentUrl)\r\n            .then(res => res.json())\r\n            .then(products => this.setState({ products: products }))\r\n    }\r\n\r\n    addToCart = (id) => {\r\n        let currentCart = localStorage.getItem('cart')\r\n        currentCart = JSON.parse(currentCart)\r\n\r\n        let duplicatteStatus = false\r\n        if (currentCart) {\r\n            for (let i = 0; i < currentCart.length; i++) {\r\n                if (currentCart[i].id === id) {\r\n                    currentCart[i].amount++\r\n                    duplicatteStatus = true\r\n                    break\r\n                }\r\n            }\r\n            if (duplicatteStatus === false) {\r\n                currentCart.push({ id: id, amount: 1 })\r\n            }\r\n        } else {\r\n\r\n            currentCart = [{ id: id, amount: 1 }]\r\n        }\r\n\r\n        localStorage.setItem('cart', JSON.stringify(currentCart))\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.products) {\r\n            return <div className=\"loader-wrapper\">\r\n                <div className=\"preloader-wrapper big active\">\r\n                    <div className=\"spinner-layer spinner-blue-only\">\r\n                        <div className=\"circle-clipper left\">\r\n                            <div className=\"circle\"></div>\r\n                        </div><div className=\"gap-patch\">\r\n                            <div className=\"circle\"></div>\r\n                        </div><div className=\"circle-clipper right\">\r\n                            <div className=\"circle\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        }\r\n        const { products } = this.state;\r\n        return (\r\n            <div className=\"row\" id=\"productCards\">\r\n                {\r\n                    products.length ? (\r\n                        <div>\r\n                            {\r\n                                products.map((item) => {\r\n                                    return (\r\n                                        < div className=\"col s3 card-container\" key={\r\n                                            item.id\r\n                                        } >\r\n                                            <div className=\"card\">\r\n                                                <Link to={`/p/${item.url}`}>\r\n                                                    <div className=\"card-image\">\r\n                                                        <img className=\"image\" src={require(`../../assets/images/${item.image}`)} />\r\n                                                    </div>\r\n                                                    <div className=\"card-content\">\r\n                                                        <span className=\"card-title\">{item.name}</span>\r\n                                                        <p className=\"card-desc\">{item.description}</p>\r\n                                                    </div>\r\n                                                </Link>\r\n                                                <div className=\"card-action\">\r\n                                                    <a className=\"btn grey darken-3 white-text\" onClick={() => this.addToCart(item.id)}>Add to cart <i class=\"material-icons\">\r\n                                                        add_shopping_cart\r\n</i></a>\r\n                                                    <p className=\"price\" value={item.price}>{item.price}€</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div >\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div >\r\n                    ) : (\r\n                            <div className=\"no-product\">\r\n                                <h2>No products found</h2>\r\n                            </div>\r\n                        )\r\n                }\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductCards;\r\n"]},"metadata":{},"sourceType":"module"}