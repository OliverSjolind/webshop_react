{"ast":null,"code":"const queryString = require('query-string');\n\nexport const handleQueryParams = (query, key, value) => {\n  var parsed = queryString.parse(query);\n  let queryKeys = Object.keys(parsed);\n  let queryValues = Object.values(parsed);\n  let txt = '';\n  let startOfQuery = '?';\n\n  if (parsed[key]) {\n    for (let i = 0; i < queryKeys.length; i++) {\n      if (i > 0) {\n        startOfQuery = '&';\n      }\n\n      key === queryKeys[i] ? txt += `${startOfQuery}${key}=${value}` : txt += `${startOfQuery}${queryKeys[i]}=${queryValues[i]}`;\n    }\n  } else {\n    for (let i = 0; i < queryKeys.length + 1; i++) {\n      if (i > 0) {\n        startOfQuery = '&';\n      }\n\n      i === queryKeys.length ? txt += `${startOfQuery}${key}=${value}` : txt += `${startOfQuery}${queryKeys[i]}=${queryValues[i]}`;\n    }\n  }\n\n  return txt;\n};","map":{"version":3,"sources":["A:/Repositories/webshop_react/webshop_frontend/client/src/App/js/functions.js"],"names":["queryString","require","handleQueryParams","query","key","value","parsed","parse","queryKeys","Object","keys","queryValues","values","txt","startOfQuery","i","length"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AACA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,GAAR,EAAaC,KAAb,KAAuB;AACpD,MAAIC,MAAM,GAAGN,WAAW,CAACO,KAAZ,CAAkBJ,KAAlB,CAAb;AACA,MAAIK,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,CAAhB;AACA,MAAIK,WAAW,GAAGF,MAAM,CAACG,MAAP,CAAcN,MAAd,CAAlB;AACA,MAAIO,GAAG,GAAG,EAAV;AACA,MAAIC,YAAY,GAAG,GAAnB;;AACA,MAAIR,MAAM,CAACF,GAAD,CAAV,EAAiB;AACb,SAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,SAAS,CAACQ,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,UAAIA,CAAC,GAAG,CAAR,EAAW;AACPD,QAAAA,YAAY,GAAG,GAAf;AACH;;AACDV,MAAAA,GAAG,KAAKI,SAAS,CAACO,CAAD,CAAjB,GAAuBF,GAAG,IAAK,GAAEC,YAAa,GAAEV,GAAI,IAAGC,KAAM,EAA7D,GAAiEQ,GAAG,IAAK,GAAEC,YAAa,GAAEN,SAAS,CAACO,CAAD,CAAI,IAAGJ,WAAW,CAACI,CAAD,CAAI,EAAzH;AACH;AACJ,GAPD,MAOO;AACH,SAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,SAAS,CAACQ,MAAV,GAAmB,CAAvC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,UAAIA,CAAC,GAAG,CAAR,EAAW;AACPD,QAAAA,YAAY,GAAG,GAAf;AACH;;AACDC,MAAAA,CAAC,KAAKP,SAAS,CAACQ,MAAhB,GAAyBH,GAAG,IAAK,GAAEC,YAAa,GAAEV,GAAI,IAAGC,KAAM,EAA/D,GAAmEQ,GAAG,IAAK,GAAEC,YAAa,GAAEN,SAAS,CAACO,CAAD,CAAI,IAAGJ,WAAW,CAACI,CAAD,CAAI,EAA3H;AACH;AACJ;;AACD,SAAOF,GAAP;AACH,CAtBM","sourcesContent":["const queryString = require('query-string');\r\nexport const handleQueryParams = (query, key, value) => {\r\n    var parsed = queryString.parse(query);\r\n    let queryKeys = Object.keys(parsed)\r\n    let queryValues = Object.values(parsed)\r\n    let txt = ''\r\n    let startOfQuery = '?';\r\n    if (parsed[key]) {\r\n        for (let i = 0; i < queryKeys.length; i++) {\r\n            if (i > 0) {\r\n                startOfQuery = '&';\r\n            }\r\n            key === queryKeys[i] ? txt += `${startOfQuery}${key}=${value}` : txt += `${startOfQuery}${queryKeys[i]}=${queryValues[i]}`\r\n        }\r\n    } else {\r\n        for (let i = 0; i < queryKeys.length + 1; i++) {\r\n            if (i > 0) {\r\n                startOfQuery = '&';\r\n            }\r\n            i === queryKeys.length ? txt += `${startOfQuery}${key}=${value}` : txt += `${startOfQuery}${queryKeys[i]}=${queryValues[i]}`\r\n        }\r\n    }\r\n    return txt\r\n}"]},"metadata":{},"sourceType":"module"}